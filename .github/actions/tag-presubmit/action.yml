name: presubmit
description: "presubmit"
inputs:
  archs:
    description: "archs"
    required: true
  tag:
    description: "tag"
    required: true
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Populate workspace with source only
      shell: bash
      run: |
        shopt -s dotglob && tmp="$(mktemp -d)" && \
          mv pipelines ${{ inputs.tag }}/* ${tmp}/ && \
          mv .github ${tmp}/ && \
          rm -rf ./* && mv ${tmp}/* . && \
          echo ".github/" >> .melangeignore && tree -a . && \
          sudo rm -rf /work && sudo mkdir /work

    # - name: Setup QEMU
    #   uses: docker/setup-qemu-action@v3
    #   with:
    #     platforms: ${{ inputs.archs }}

    - uses: chainguard-dev/actions/melange-build@main
      with:
        archs: ${{ inputs.archs }}
        multi-config: keycloak-melange.yaml,keycloak-metrics-spi-melange.yaml
        signing-key-path: /work/melange.rsa
        repository-path: /work/packages
        empty-workspace: false
        sign-with-temporary-key: true
        pipeline-dir: pipelines

    - name: Create temp copy of /work directory (used in next step)
      shell: bash
      run: |
        rm -rf .apko-automount && cp -r /work .apko-automount

    - uses: chainguard-images/actions/apko-build@main
      with:
        config: apko.yaml
        tag: ghcr.io/${{ github.repository }}:${{ inputs.tag }}-smoketest
        keyring-append: /work/melange.rsa.pub
        archs: ${{ inputs.archs }}
        automount-src: .apko-automount/.
        automount-dest: /work

    - name: Load image from apko-produced tarball
      shell: bash
      run: |
        docker load < output.tar

    - name: Smoke test
      shell: bash
      run: |
        set -e

        ref="ghcr.io/${{ github.repository }}:${{ inputs.tag }}-smoketest-amd64"

        docker run -d --rm -p 9000:9000 \
          -e KEYCLOAK_DATABASE_VENDOR=dev-file \
          -e KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true \
          --name smoketest "${ref}"

        trap "docker rm -f smoketest" EXIT
        sleep 30 # Give server a few seconds to come up

        curl -v --max-time 10 --fail http://localhost:9000/health
